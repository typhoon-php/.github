on:
  workflow_call:
    inputs:
      php_versions:
        description: PHP versions in JSON array format
        type: string
        default: '["8.1", "8.2", "8.3", "8.4"]'
      dependencies:
        description: Dependency versions (locked, lowest, highest) in JSON array format
        type: string
        default: '["locked", "lowest", "highest"]'
      rector:
        type: boolean
        default: true
      phpstan:
        type: boolean
        default: true
      psalm:
        type: boolean
        default: false
      test:
        type: boolean
        default: true
      infection:
        type: boolean
        default: true
    secrets:
      COMPOSER_AUTH:
        required: false
      CODECOV_TOKEN:
        description: Codecov.io token
        required: false
      STRYKER_DASHBOARD_API_KEY:
        required: false

jobs:
  composer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ fromJSON(inputs.php_versions)[0] }}
          tools: composer:v2
          coverage: none
      - run: composer validate
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer normalize --dry-run
      - run: composer analyse-deps

  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ fromJSON(inputs.php_versions)[0] }}
          tools: composer:v2, cs2pr
          coverage: none
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer fixcs -- --dry-run --format=checkstyle | cs2pr

  rector:
    if: inputs.rector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ fromJSON(inputs.php_versions)[0] }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer rector -- --dry-run

  phpstan:
    if: inputs.phpstan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ${{ fromJson(inputs.php_versions) }}
        dependencies: ${{ fromJson(inputs.dependencies) }}
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
          dependency-versions: ${{ matrix.dependencies }}
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer phpstan -- --error-format=github

  psalm:
    if: inputs.psalm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ${{ fromJson(inputs.php_versions) }}
        dependencies: ${{ fromJson(inputs.dependencies) }}
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
          dependency-versions: ${{ matrix.dependencies }}
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer psalm -- --stats --output-format=github ${{ (matrix.php == fromJson(inputs.php_versions)[0]) && (matrix.dependencies == fromJson(inputs.dependencies)[0]) && '--shepherd' || '' }}

  test:
    if: inputs.test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ${{ fromJson(inputs.php_versions) }}
        dependencies: ${{ fromJson(inputs.dependencies) }}
    steps:
      - id: coverage
        run: |
          echo "coverage=${{ secrets.codecov-token && (matrix.php == fromJson(inputs.php_versions)[0]) && (matrix.dependencies == fromJson(inputs.dependencies)[0]) && '1' || '' }}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-file: development
          tools: composer:v2
          coverage: ${{ steps.coverage.outputs.coverage && 'pcov' || '' }}
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
          dependency-versions: ${{ matrix.dependencies }}
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer test -- --colors=always ${{ steps.coverage.outputs.coverage && '--coverage-clover coverage.xml' || '' }}
      - if: ${{ steps.coverage.outputs.coverage }}
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.codecov-token }}

  infection:
    if: inputs.test && inputs.infection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ fromJSON(inputs.php_versions)[0] }}
          ini-file: development
          tools: composer:v2
      - uses: ramsey/composer-install@v3
        with:
          composer-options: --optimize-autoloader
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH || '{}' }}
      - run: composer infection
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
